{"version":3,"sources":["images/shape.svg","images/logo.svg","logo.svg","actions/theoretical.js","containers/dialogs/BaseDialog.js","containers/dialogs/InstructionDialog.js","actions/demo.js","containers/dialogs/SwipeDialog.js","components/Menu.js","containers/Topbar.js","components/MathNotation.js","containers/Main.js","components/ScrollTop.js","components/SimpleLineChart.js","containers/common/Months.js","containers/common/Loading.js","containers/TheoreticalAnalysis.js","utils/geometryUtils.js","sketches/sketch.js","containers/simulator/SimulatorContainer.js","utils/generalUtils.js","containers/simulator/SideBar.js","containers/typo/SectionHeader.js","containers/Demo.js","routes.js","reducers/demo.js","reducers/index.js","reducers/theoretical.js","store/configureStore.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","GET_THEORETICAL_THEOREMS","getTheorems","theorems","type","getTheoremsCreator","dispatch","BaseDialog","this","props","classes","open","onClose","Dialog","disableBackdropClick","disableEscapeKeyDown","aria-labelledby","aria-describedby","scroll","DialogTitle","id","DialogContent","DialogContentText","className","container","children","Component","withStyles","theme","maxWidth","flexGrow","textAlign","display","flexDirection","justifyContent","bottomMargin","marginBottom","spacing","InstructionDialog","Typography","variant","gutterBottom","Button","component","Link","to","onClick","handleClose","color","autoFocus","withRouter","GET_NODES","GET_SENSING_RATE","ADD_NODE","ADDING_NODES","NEIGHBOR_DISCOVERY_PHASE","COVERAGE_HOLE_DETECTION_PHASE","ADD_SENSING_RATE","ADD_COVERAGE_HOLE","SET_REFERENCE_NODES","SET_REFERENCE","SET_NEIGHBORS","ADD_NODE_ONE_HOPE_NEIGHBORS","ADD_NODE_TWO_HOPE_NEIGHBORS","DRAW_CIRCUM_CENTER","getNodes","getSensingRate","sensingRate","addNodeCreator","node","addingNodesCreator","neighborDiscoveryPhaseCreator","coverageHoleDetectionPhaseCreator","addSensingRateCreator","addCoverageHole","referenceNode","hole","setReferenceNodesCreator","nodes","referenceNodes","addNodeOneHopeNeighborCreator","neighbors","addNodeTwoHopeNeighborCreator","setReferenceCreator","drawCircumCenterCreator","circumCenter","require","autoPlay","SwipeableViews","SwipeDialog","handleNext","setState","prevState","activeStep","handleBack","handleStepChange","handleCloseOk","onOk","state","checked","filter","val","isReference","map","index","handleToggle","forceUpdate","console","log","List","dense","root","value","labelId","ListItem","key","button","ListItemIcon","ListItemText","primary","ListItemSecondaryAction","Checkbox","edge","onChange","inputProps","connect","demo","bindActionCreators","demoActions","maxHeight","stepsContainer","marginLeft","marginTop","height","Menu","label","pathname","Topbar","menuDrawer","handleChange","event","mobileMenuOpen","mobileMenuClose","current","currentPath","window","scrollTo","AppBar","position","appBar","Toolbar","Grid","alignItems","item","xs","flex","inline","noWrap","link","tagline","noTabs","Fragment","productLogo","iconContainer","IconButton","iconButton","aria-label","tabContainer","SwipeableDrawer","anchor","onOpen","title","external","MaterialLink","href","search","location","Tabs","indicatorColor","textColor","Tab","tabItem","boxShadow","borderBottom","palette","grey","backgroundColor","breakpoints","down","textDecoration","borderLeft","paddingLeft","up","paddingTop","float","paddingBottom","minWidth","MathNotation","text","Provider","Node","formula","backgroundShape","Main","learnMoredialog","getStartedDialog","openDialog","dialogClose","openGetStartedDialog","closeGetStartedDialog","CssBaseline","justify","grid","md","Paper","paper","box","style","textTransform","actionButtom","alignRight","theoremsActions","overflow","background","backgroundSize","backgroundPosition","width","padding","secondary","rangeLabel","topBar","outlinedButtom","margin","blockCenter","block","inlining","marginRight","buttonBar","noBorder","borderBottomStyle","loadingState","opacity","loadingMessage","top","left","ScrollToTop","prevProps","withTheme","data","dataKey","stackId","fill","main","light","Months","loading","role","fontSize","numeral","defaultFormat","monthRange","TheoreticalAnalysis","amount","period","start","monthlyInterest","totalInterest","monthlyPayment","totalPayment","handleChangeAmount","updateValues","handleChangePeriod","handleChangeStart","Math","pow","Array","from","length","i","name","ceil","toFixed","format","Slider","min","max","step","Avatar","loanAvatar","interestAvatar","mainBadge","verticalAlign","contrastText","checkPointInsideCircle","nodeToCompare","radius","sqrt","x","y","squareDistanceBetweenPoints","nodeA","nodeB","isActive","oneHopeNeighbors","twoHopeNeighbors","coverageHolesAroundNode","active","Point","Triangle","nodeC","rightAngle","pointA","pointB","pointC","abs","hypot","getDistanceAB","getDistanceAC","getDistanceBC","getArea","asin","getCircumRadius","a2","b2","c2","a","b","c","alpha","acos","betta","gamma","getAngles","isA","isB","isC","oa","ob","oc","mid_point","a1","b1","c1","determinant","Number","MAX_VALUE","A","B","C","resA","lineFromNodes","resB","oe","of","og","perpendicularBisectorFromLine","resC","e","f","g","circumcenter","lineLineIntersection","sketch","p","div1","document","getElementById","setup","offsetWidth","createCanvas","myCustomRedrawAccordingToNewPropsHandler","getCoords","sendCoords","undefined","addingNodes","draw","forEach","ellipse","stroke","circle","mousePressed","mouseX","mouseY","canvasWidth","canvasHeight","windowResized","resizeCanvas","SimulatorContainer","avatar","avatarContainer","itemContainer","baseline","alignSelf","inlineRight","backButton","joinArrays","array1","array2","Set","createMuiTheme","green","red","SideBar","dialogCloseOk","getNeighbors","handleAddNodes","getNodeNeighbors","nodesThatListenedMessageWithRespectToRadius","valM","union","findHoleBetweenReferenceNodeAndPairNeighbors","Ai","Aj","triangle","R","Z","getCircumCenter","isObtuse","isAcute","nodesThatCoverCircumCenter","coverageHoleDetection","X","N","nodeX","N_uX","sort","firstN_uX","N_dX","isFirstTime","shift","oneHop","message","response","push","neighborDiscoveryPhase","disabled","startIcon","SectionHeader","subtitle","sectionContainer","fontWeight","Demo","direction","gridSide","store","HashRouter","Switch","Route","exact","path","rootReducer","combineReducers","action","coverageHoleDetectionPhase","coverageHoles","copy","prevStateHole","prevStateOneHop","prevStateTwoHop","prevStateSetReference","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","configureStore","preloadedState","createStore","applyMiddleware","thunk","logger","blue","indigo","typography","fontFamily","join","App","ThemeProvider","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a123e2ea.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/shape.208f3d38.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","export const GET_THEORETICAL_THEOREMS = 'GET_THEORETICAL_THEOREMS';\n\nexport const getTheorems = theorems => ({\n    type: GET_THEORETICAL_THEOREMS,\n    theorems\n});\n\nexport const getTheoremsCreator = () => dispatch =>\n    (\n        dispatch(getTheorems({}))\n    );\n\n","import React, {Component} from 'react';\nimport withStyles from '@material-ui/styles/withStyles';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nconst styles = theme => ({\n    container: {\n        maxWidth: 600,\n        flexGrow: 1,\n        textAlign: 'center',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center'\n    },\n    bottomMargin: {\n        marginBottom: theme.spacing(2)\n    }\n});\n\nclass BaseDialog extends Component {\n    render() {\n        const {classes, open, onClose} = this.props;\n        return (\n            <Dialog\n                disableBackdropClick\n                disableEscapeKeyDown\n                open={open}\n                onClose={onClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n                scroll='body'\n            >\n                <DialogTitle id=\"alert-dialog-title\"></DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        <div className={classes.container}>\n                            {this.props.children}\n                        </div>\n                    </DialogContentText>\n                </DialogContent>\n            </Dialog>\n        )\n    }\n}\n\nexport default withStyles(styles)(BaseDialog);","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport withStyles from '@material-ui/styles/withStyles';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport BaseDialog from './BaseDialog';\n\nconst styles = theme => ({\n  container: {\n    maxWidth: 600,\n    flexGrow: 1,\n    textAlign: 'center',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center'\n  },\n  bottomMargin: {\n    marginBottom: theme.spacing(2)\n  }\n});\n\nclass InstructionDialog extends Component {\n  render() {\n    const { classes } = this.props;\n    return (\n      <BaseDialog {...this.props} >\n        <div className={classes.bottomMargin}>\n          <Typography variant=\"body2\" gutterBottom>\n            This is a sample introduction\n          </Typography>\n        </div>\n        <Button component={Link} to='/dashboard' className={classes.bottomMargin} variant='contained' onClick={this.handleClose} color=\"primary\" autoFocus>\n          Getting started\n        </Button>\n        <Button component={Link} to='/dashboard' variant='outlined' onClick={this.handleClose} color=\"primary\" autoFocus>\n          Dashboard\n        </Button>\n      </BaseDialog>\n    )\n  }\n}\n\nexport default withRouter(withStyles(styles)(InstructionDialog));\n","\nexport const GET_NODES = 'GET_NODES';\nexport const GET_SENSING_RATE = 'GET_SENSING_RATE';\nexport const ADD_NODE = 'ADD_NODE';\nexport const ADDING_NODES = 'ADDING_NODES';\nexport const NEIGHBOR_DISCOVERY_PHASE = 'NEIGHBOR_DISCOVERY_PHASE';\nexport const COVERAGE_HOLE_DETECTION_PHASE = 'COVERAGE_HOLE_DETECTION_PHASE';\nexport const ADD_SENSING_RATE = 'ADD_SENSING_RATE';\nexport const ADD_COVERAGE_HOLE = 'ADD_COVERAGE_HOLE';\nexport const SET_REFERENCE_NODES = 'SET_REFERENCE_NODES';\nexport const SET_REFERENCE = 'SET_REFERENCE';\nexport const SET_NEIGHBORS = 'SET_NEIGHBORS';\nexport const ADD_NODE_ONE_HOPE_NEIGHBORS = 'ADD_NODE_ONE_HOPE_NEIGHBORS';\nexport const ADD_NODE_TWO_HOPE_NEIGHBORS = 'ADD_NODE_TWO_HOPE_NEIGHBORS';\nexport const DRAW_CIRCUM_CENTER = 'DRAW_CIRCUM_CENTER';\n\nexport const getNodes = () => ({\n    type: GET_NODES,\n});\n\nexport const getSensingRate = sensingRate => ({\n    type: GET_SENSING_RATE,\n    sensingRate\n});\n\nexport const addNodeCreator= node => ({\n    type: ADD_NODE,\n    node\n});\n\nexport const addingNodesCreator = () => ({\n    type: ADDING_NODES\n});\n\nexport const neighborDiscoveryPhaseCreator = () => ({\n    type: NEIGHBOR_DISCOVERY_PHASE\n});\n\nexport const coverageHoleDetectionPhaseCreator = () => ({\n    type: COVERAGE_HOLE_DETECTION_PHASE\n});\n\nexport const addSensingRateCreator = sensingRate => ({\n    type: ADD_SENSING_RATE,\n    sensingRate\n});\n\nexport const addCoverageHole = (referenceNode, hole) => ({\n    type: ADD_COVERAGE_HOLE,\n    referenceNode,\n    hole\n});\n\nexport const setReferenceNodesCreator = nodes => ({\n    type: SET_REFERENCE_NODES,\n    referenceNodes : nodes\n});\n\nexport const addNodeOneHopeNeighborCreator = (node, neighbors) => ({\n    type: ADD_NODE_ONE_HOPE_NEIGHBORS,\n    referenceNode : node,\n    neighbors\n});\n\nexport const addNodeTwoHopeNeighborCreator = (node, neighbors) => ({\n    type: ADD_NODE_TWO_HOPE_NEIGHBORS,\n    referenceNode : node,\n    neighbors\n});\n\nexport const setReferenceCreator = (node) => ({\n    type: SET_REFERENCE,\n    referenceNode : node,\n});\nexport const drawCircumCenterCreator = (node) => ({\n    type: DRAW_CIRCUM_CENTER,\n    circumCenter : node,\n});\n\n","import React, {Component} from 'react';\nimport {Link, withRouter} from 'react-router-dom';\nimport withStyles from '@material-ui/styles/withStyles';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport BaseDialog from './BaseDialog';\nimport SwipeableViews from 'react-swipeable-views';\nimport MobileStepper from '@material-ui/core/MobileStepper';\nimport {autoPlay} from 'react-swipeable-views-utils';\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport SettingsInputAntennaIcon from '@material-ui/icons/SettingsInputAntenna';\nimport List from \"@material-ui/core/List\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport {bindActionCreators} from \"redux\";\nimport * as demoActions from \"../../actions/demo\";\nimport {connect} from \"react-redux\";\n\nconst logo = require('../../images/logo.svg');\n\nconst AutoPlaySwipeableViews = autoPlay(SwipeableViews);\n\n\nconst styles = theme => ({\n    container: {\n        maxWidth: 600,\n        maxHeight: 300,\n        flexGrow: 1,\n        textAlign: 'center',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center'\n    },\n    stepsContainer: {\n        marginLeft: 72,\n        textAlign: 'left',\n        marginTop: 20,\n        height: 65\n    },\n    bottomMargin: {\n        marginBottom: theme.spacing(2)\n    }\n});\n\nclass SwipeDialog extends Component {\n\n    handleNext = () => {\n        this.setState(prevState => ({\n            activeStep: prevState.activeStep + 1,\n        }));\n    };\n\n    handleBack = () => {\n        this.setState(prevState => ({\n            activeStep: prevState.activeStep - 1,\n        }));\n    };\n\n    handleStepChange = activeStep => {\n        this.setState({activeStep});\n    };\n\n    handleClose = () => {\n        this.props.onClose()\n    };\n\n    handleCloseOk = () => {\n        this.props.onOk()\n    };\n\n    state = {\n        checked: this.props.nodes ? this.props.nodes.filter((val) => val.isReference).map((val, index) => index) : []\n    };\n\n    handleToggle = index => () => {\n        this.props.setReferenceCreator(index);\n        this.forceUpdate(); // Calling force update since the component was not being re rendered when calling set Reference\n\n    };\n\n\n    render() {\n        const {classes} = this.props;\n        const nodes = this.props.nodes ? this.props.nodes : []\n        console.log(\"RENDER!!! DIALOG\");\n\n\n        return (\n            <BaseDialog {...this.props}>\n                <div className={classes.container}>\n                    <div>\n                        <Typography variant=\"h5\" gutterBottom>\n                            Choose a reference node\n                        </Typography>\n                        <List dense className={classes.root}>\n                            {nodes.map((value, index) => {\n                                const labelId = `checkbox-list-secondary-label-${value}`;\n                                return (\n                                    <ListItem key={index} button>\n                                        <ListItemIcon>\n                                            <SettingsInputAntennaIcon/>\n                                        </ListItemIcon>\n                                        <ListItemText id={labelId} primary={`Node ${index + 1}`}/>\n                                        <ListItemSecondaryAction>\n                                            <Checkbox\n                                                edge=\"end\"\n                                                onChange={this.handleToggle(index)}\n                                                checked={value.isReference}\n                                                inputProps={{'aria-labelledby': labelId}}\n                                            />\n                                        </ListItemSecondaryAction>\n                                    </ListItem>\n                                );\n                            })}\n                        </List>\n                        <Button autoFocus onClick={this.handleClose} color=\"default\">\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleCloseOk} color=\"primary\">\n                            Ok\n                        </Button>\n                    </div>\n                </div>\n            </BaseDialog>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        nodes: state.demo.nodes,\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({...demoActions}, dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(withStyles(styles)(SwipeDialog)))\n","const Menu = [\n  {\n    label: \"Home\",\n    pathname: \"/\"\n  },\n  {\n    label: \"Theoretical Analysis\",\n    pathname: \"/tanalysis\"\n  },\n  {\n    label: \"Definitions and Notations\",\n    pathname: \"/definitions\"\n  },\n  {\n    label: \"Demo\",\n    pathname: \"/demo\"\n  }\n\n];\n\nexport default Menu;","import React,  { Component } from 'react';\nimport withStyles from '@material-ui/styles/withStyles';\nimport { Link, withRouter } from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport { Link as MaterialLink } from '@material-ui/core'\nimport Menu from '../components/Menu';\n\nconst logo = require('../images/logo.svg');\n\nconst styles = theme => ({\n  appBar: {\n    position: 'relative',\n    boxShadow: 'none',\n    borderBottom: `1px solid ${theme.palette.grey['100']}`,\n    backgroundColor: 'white',\n\n  },\n  inline: {\n    display: 'inline'\n  },\n  flex: {\n    display: 'flex',\n    [theme.breakpoints.down('sm')]: {\n      display: 'flex',\n      justifyContent: 'space-evenly',\n      alignItems: 'center'\n    }\n  },\n  link: {\n    textDecoration: 'none',\n    color: 'inherit'\n  },\n  productLogo: {\n    display: 'inline-block',\n    borderLeft: `1px solid ${theme.palette.grey['A100']}`,\n    marginLeft: 32,\n    paddingLeft: 24,\n    [theme.breakpoints.up('md')]: {\n      paddingTop: '1.5em'\n    }\n  },\n  tagline: {\n    display: 'inline-block',\n    marginLeft: 10,\n    [theme.breakpoints.up('md')]: {\n      paddingTop: '0.8em'\n    }\n  },\n  iconContainer: {\n    display: 'none',\n    [theme.breakpoints.down('sm')]: {\n      display: 'block'\n    }\n  },\n  iconButton: {\n    float: 'right'\n  },\n  tabContainer: {\n    marginLeft: 32,\n    [theme.breakpoints.down('sm')]: {\n      display: 'none'\n    }\n  },\n  tabItem: {\n    paddingTop: 20,\n    paddingBottom: 20,\n    minWidth: 'auto'\n  }\n})\n\nclass Topbar extends Component {\n\n  state = {\n    value: 0,\n    menuDrawer: false\n  };\n\n  handleChange = (event, value) => {\n    this.setState({ value });\n  };\n\n  mobileMenuOpen = (event) => {\n    this.setState({ menuDrawer: true });\n  }\n\n  mobileMenuClose = (event) => {\n    this.setState({ menuDrawer: false });\n  }\n\n  componentDidMount() {\n    window.scrollTo(0, 0);\n  }\n\n  current = () => {\n    if(this.props.currentPath === '/home') {\n      return 0\n    }\n    if(this.props.currentPath === '/tanalysis') {\n      return 1\n    }\n    if(this.props.currentPath === '/definitions') {\n      return 2\n    }\n    if(this.props.currentPath === '/demo') {\n      return 3\n    }\n  }\n\n  render() {\n\n    const { classes } = this.props;\n\n    return (\n      <AppBar position=\"absolute\" color=\"default\" className={classes.appBar}>\n        <Toolbar>\n            <Grid container spacing={24} alignItems=\"baseline\">\n              <Grid item xs={12} className={classes.flex}>\n                  <div className={classes.inline}>\n                    <Typography variant=\"h6\" color=\"inherit\" noWrap>\n                      <Link to='/' className={classes.link}>\n                        <span className={classes.tagline}>INFO-F420 - Computational geometry</span>\n                      </Link>\n                    </Typography>\n                  </div>\n                  { !this.props.noTabs && (\n                    <React.Fragment>\n                      <div className={classes.productLogo}>\n                        <Typography>\n                          Coverage hole detection - WSN\n                        </Typography>\n                      </div>\n                      <div className={classes.iconContainer}>\n                        <IconButton onClick={this.mobileMenuOpen} className={classes.iconButton} color=\"inherit\" aria-label=\"Menu\">\n                          <MenuIcon />\n                        </IconButton>\n                      </div>\n                      <div className={classes.tabContainer}>\n                        <SwipeableDrawer anchor=\"right\" open={this.state.menuDrawer} onClose={this.mobileMenuClose} onOpen={this.mobileMenuOpen}>\n                          <AppBar title=\"Menu\" />\n                          <List>\n                            {Menu.map((item, index) => (\n                              <ListItem component={item.external ? MaterialLink : Link} href={item.external ? item.pathname : null} to={item.external ? null : {pathname: item.pathname, search: this.props.location.search}} button key={item.label}>\n                                <ListItemText primary={item.label} />\n                              </ListItem>\n                            ))}\n                          </List>\n                        </SwipeableDrawer>\n                        <Tabs\n                          value={this.current() || this.state.value}\n                          indicatorColor=\"primary\"\n                          textColor=\"primary\"\n                          onChange={this.handleChange}\n                        >\n                          {Menu.map((item, index) => (\n                            <Tab key={index} component={item.external ? MaterialLink : Link} href={item.external ? item.pathname : null} to={item.external ? null : {pathname: item.pathname, search: this.props.location.search}} classes={{root: classes.tabItem}} label={item.label} />\n                          ))}\n                        </Tabs>\n                      </div>\n                    </React.Fragment>\n                  )}\n              </Grid>\n            </Grid>\n        </Toolbar>\n      </AppBar>\n    )\n  }\n}\n\nexport default withRouter(withStyles(styles)(Topbar))\n","import React, {Component} from \"react\";\nimport MathJax from 'react-mathjax'\n\nclass MathNotation extends Component {\n    render() {\n        const {text,inline} = this.props;\n        return (\n            <div>\n                {\n                    inline && (\n                        <MathJax.Provider>\n                            <div>\n                                <MathJax.Node inline formula={text} />\n                            </div>\n                        </MathJax.Provider>\n                    )\n                }\n                {!inline  &&\n                <p>\n                    <MathJax.Provider>\n                        <div>\n                            <MathJax.Node formula={text} />\n                        </div>\n                    </MathJax.Provider>\n                </p>\n                }\n            </div>\n\n\n\n        );\n    }\n}\nexport default MathNotation","import React, {Component} from 'react';\nimport withStyles from '@material-ui/styles/withStyles';\nimport {withRouter} from 'react-router-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport InstructionDialog from './dialogs/InstructionDialog';\nimport SwipeDialog from './dialogs/SwipeDialog';\nimport {connect} from 'react-redux'\nimport Topbar from './Topbar';\nimport {bindActionCreators} from \"redux\";\nimport * as theoremsActions from \"../actions/theoretical\";\nimport MathNotation from \"../components/MathNotation\";\n\nconst backgroundShape = require('../images/shape.svg');\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.grey['100'],\n        overflow: 'hidden',\n        background: `url(${backgroundShape}) no-repeat`,\n        backgroundSize: 'cover',\n        backgroundPosition: '0 400px',\n        paddingBottom: 200\n    },\n    grid: {\n        width: 1200,\n        marginTop: 40,\n        [theme.breakpoints.down('sm')]: {\n            width: 'calc(100% - 20px)'\n        }\n    },\n    paper: {\n        padding: theme.spacing(3),\n        textAlign: 'left',\n        color: theme.palette.text.secondary,\n    },\n    rangeLabel: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        paddingTop: theme.spacing(2)\n    },\n    topBar: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        marginTop: 32\n    },\n    outlinedButtom: {\n        textTransform: 'uppercase',\n        margin: theme.spacing(1)\n    },\n    actionButtom: {\n        textTransform: 'uppercase',\n        margin: theme.spacing(1),\n        width: 152\n    },\n    blockCenter: {\n        padding: theme.spacing(2),\n        textAlign: 'center'\n    },\n    block: {\n        padding: theme.spacing(2),\n    },\n    box: {\n        marginBottom: 40,\n        height: 65\n    },\n    inlining: {\n        display: 'inline-block',\n        marginRight: 10\n    },\n    buttonBar: {\n        display: 'flex'\n    },\n    alignRight: {\n        display: 'flex',\n        justifyContent: 'flex-end'\n    },\n    noBorder: {\n        borderBottomStyle: 'hidden'\n    },\n    loadingState: {\n        opacity: 0.05\n    },\n    loadingMessage: {\n        position: 'absolute',\n        top: '40%',\n        left: '40%'\n    }\n});\n\nclass Main extends Component {\n\n    state = {\n        learnMoredialog: false,\n        getStartedDialog: false\n    };\n\n    componentDidMount() {\n    }\n\n    openDialog = (event) => {\n        this.setState({learnMoredialog: true});\n    }\n\n    dialogClose = (event) => {\n        this.setState({learnMoredialog: false});\n    }\n\n    openGetStartedDialog = (event) => {\n        this.setState({getStartedDialog: true});\n    }\n\n    closeGetStartedDialog = (event) => {\n        this.setState({getStartedDialog: false});\n    }\n\n    render() {\n        const {classes} = this.props;\n        return (\n            <React.Fragment>\n                <CssBaseline/>\n                <Topbar/>\n                <div className={classes.root}>\n                    <Grid container justify=\"center\">\n                        <Grid spacing={4} alignItems=\"center\" justify=\"center\" container className={classes.grid}>\n                            <Grid item xs={12} md={4}>\n                                <Paper className={classes.paper}>\n                                    <div className={classes.box}>\n                                        <Typography style={{textTransform: 'uppercase'}} color='secondary' gutterBottom>\n                                            First title :) :P\n                                        </Typography>\n                                        <Typography variant=\"body2\" gutterBottom>\n                                            Let's try a math equation :P\n                                            <br/> <MathNotation text={\"hola\"} inline={true}/>\n                                        </Typography>\n                                    </div>\n                                    <div style={{display: 'flex', justifyContent: 'flex-end'}}>\n                                        <Button color='primary' variant=\"contained\" className={classes.actionButtom}>\n                                            Learn more\n                                        </Button>\n                                    </div>\n                                </Paper>\n                            </Grid>\n                            <Grid item xs={12} md={4}>\n                                <Paper className={classes.paper}>\n                                    <div className={classes.box}>\n                                        <Typography style={{textTransform: 'uppercase'}} color='secondary' gutterBottom>\n                                            Another box\n                                        </Typography>\n                                        <Typography variant=\"body1\" gutterBottom>\n                                            A default box\n                                        </Typography>\n                                    </div>\n                                    <div style={{display: 'flex', justifyContent: 'flex-end'}}>\n                                        <Button color='primary' variant=\"contained\" className={classes.actionButtom}>\n                                            Learn more\n                                        </Button>\n                                    </div>\n                                </Paper>\n                            </Grid>\n                            <Grid item xs={12} md={4}>\n                                <Paper className={classes.paper}>\n                                    <div className={classes.box}>\n                                        <Typography style={{textTransform: 'uppercase'}} color='secondary' gutterBottom>\n                                            A box with a carousel\n                                        </Typography>\n                                        <Typography variant=\"body1\" gutterBottom>\n                                            If you click in Getting Started, you will see a nice carousel\n                                        </Typography>\n                                    </div>\n                                    <div className={classes.alignRight}>\n                                        <Button onClick={this.openDialog} variant=\"outlined\"\n                                                className={classes.actionButtom}>\n                                            Learn more\n                                        </Button>\n                                        <Button onClick={this.openGetStartedDialog} color='primary' variant=\"contained\"\n                                                className={classes.actionButtom}>\n                                            Dashboard\n                                        </Button>\n                                    </div>\n                                </Paper>\n                            </Grid>\n                            <Grid container item xs={12}>\n                                <Grid item xs={12}>\n                                    <Paper className={classes.paper}>\n                                        <div>\n                                            <div className={classes.box}>\n                                                <Typography color='secondary' gutterBottom>\n                                                    Full box\n                                                </Typography>\n                                                <Typography variant=\"body1\" gutterBottom>\n                                                    This is an example of a full-width box\n                                                </Typography>\n                                            </div>\n                                            <div className={classes.alignRight}>\n                                                <Button color='primary' variant=\"contained\"\n                                                        className={classes.actionButtom}>\n                                                    Learn more\n                                                </Button>\n                                            </div>\n                                        </div>\n                                    </Paper>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <SwipeDialog\n                        open={this.state.learnMoredialog}\n                        onClose={this.dialogClose}/>\n                    <InstructionDialog\n                        open={this.state.getStartedDialog}\n                        onClose={this.closeGetStartedDialog}\n                    />\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        theorems: state.theorems.theorems\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({...theoremsActions}, dispatch)\n}\n\n// export default withRouter(withStyles(styles)(Main));\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(withStyles(styles)(Main)))\n","import { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nclass ScrollToTop extends Component {\n    componentDidUpdate(prevProps) {\n      if (this.props.location.pathname !== prevProps.location.pathname) {\n        window.scrollTo(0, 0);\n      }\n    }\n\n    render() {\n      return this.props.children;\n    }\n  }\n\n  export default withRouter(ScrollToTop);\n","import React from 'react';\nimport ResponsiveContainer from 'recharts/lib/component/ResponsiveContainer';\nimport BarChart from 'recharts/lib/chart/BarChart';\nimport Bar from 'recharts/lib/cartesian/Bar';\nimport XAxis from 'recharts/lib/cartesian/XAxis';\nimport Tooltip from 'recharts/lib/component/Tooltip';\nimport { withTheme } from '@material-ui/styles';\n\nfunction SimpleLineChart(props) {\n  const { theme, data } = props;\n  return (\n    <ResponsiveContainer width=\"99%\" height={225}>\n      <BarChart data={data}>\n        <XAxis dataKey=\"name\"/>\n        <Tooltip/>\n        <Bar dataKey=\"Type\" stackId=\"a\" fill={theme.palette.primary.main} />\n        <Bar dataKey=\"OtherType\" stackId=\"a\" fill={theme.palette.secondary.light} />\n      </BarChart>\n    </ResponsiveContainer>\n  );\n}\n\nexport default withTheme(SimpleLineChart);","const Months = [\n    '01 December 2018',\n    '01 January 2019',\n    '01 February 2019',\n    '01 March 2019',\n    '01 April 2019',\n    '01 May 2019',\n    '01 June 2019',\n    '01 July 2019',\n    '01 August 2019',\n    '01 September 2019',\n    '01 October 2019',\n    '01 November 2019',\n    '01 December 2019',\n    '01 January 2020',\n    '01 March 2020',\n    '01 April 2020',\n    '01 May 2020',\n    '01 June 2020',\n    '01 July 2020',\n    '01 August 2020',\n    '01 September 2020',\n    '01 October 2020',\n    '01 November 2020',\n    '01 December 2020',\n    '01 January 2020',\n    '01 February 2020',\n    '01 March 2020',\n    '01 April 2020',\n  ];\n\n  export default Months;","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/styles/withStyles';\n\nconst styles = theme => ({\n  loadingMessage: {\n    position: 'absolute',\n    top: '40%',\n    left: '40%'\n  }\n});\n\nfunction Loading(props) {\n  const { classes, loading } = props;\n  return (\n    <div style={loading ? { display: 'block' } : { display: 'none' }} className={classes.loadingMessage}>\n      <span role='img' aria-label='emoji' style={{ fontSize: 58, textAlign: 'center', display: 'inline-block', width: '100%' }}>👋</span>\n      <Typography variant=\"h6\">\n        Waiting for input\n      </Typography>\n    </div>\n  );\n}\n\nexport default withStyles(styles)(Loading);","import React,  { Component } from 'react';\nimport withStyles from '@material-ui/styles/withStyles';\nimport { withRouter, Link } from 'react-router-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Slider from '@material-ui/core/Slider';\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\nimport SimpleLineChart from '../components/SimpleLineChart';\nimport Months from './common/Months';\nimport VerifiedUserIcon from '@material-ui/icons/VerifiedUser';\nimport Loading from './common/Loading';\n\nimport Topbar from './Topbar';\n\nconst numeral = require('numeral');\nnumeral.defaultFormat('0,000');\n\nconst backgroundShape = require('../images/shape.svg');\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.grey['100'],\n    overflow: 'hidden',\n    background: `url(${backgroundShape}) no-repeat`,\n    backgroundSize: 'cover',\n    backgroundPosition: '0 400px',\n    paddingBottom: 200\n  },\n  grid: {\n    width: 1200,\n    margin: `0 ${theme.spacing(2)}px`,\n    [theme.breakpoints.down('sm')]: {\n      width: 'calc(100% - 20px)'\n    }\n  },\n  loadingState: {\n    opacity: 0.05\n  },\n  paper: {\n    padding: theme.spacing(3),\n    margin: theme.spacing(2),\n    textAlign: 'left',\n    color: theme.palette.text.secondary\n  },\n  rangeLabel: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    paddingTop: theme.spacing(2)\n  },\n  topBar: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  outlinedButtom: {\n    textTransform: 'uppercase',\n    margin: theme.spacing(1)\n  },\n  actionButtom: {\n    textTransform: 'uppercase',\n    margin: theme.spacing(1),\n    width: 152,\n    height: 36\n  },\n  blockCenter: {\n    padding: theme.spacing(2),\n    textAlign: 'center'\n  },\n  block: {\n    padding: theme.spacing(2),\n  },\n  loanAvatar: {\n    display: 'inline-block',\n    verticalAlign: 'center',\n    width: 16,\n    height: 16,\n    marginRight: 10,\n    marginBottom: -2,\n    color: theme.palette.primary.contrastText,\n    backgroundColor: theme.palette.primary.main\n  },\n  interestAvatar: {\n    display: 'inline-block',\n    verticalAlign: 'center',\n    width: 16,\n    height: 16,\n    marginRight: 10,\n    marginBottom: -2,\n    color: theme.palette.primary.contrastText,\n    backgroundColor: theme.palette.primary.light\n  },\n  inlining: {\n    display: 'inline-block',\n    marginRight: 10\n  },\n  buttonBar: {\n    display: 'flex'\n  },\n  noBorder: {\n    borderBottomStyle: 'hidden'\n  },\n  mainBadge: {\n    textAlign: 'center',\n    marginTop: theme.spacing(4),\n    marginBottom: theme.spacing(4)\n  }\n});\n\nconst monthRange = Months;\n\nclass TheoreticalAnalysis extends Component {\n\n  state = {\n    loading: true,\n    amount: 15000,\n    period: 3,\n    start: 0,\n    monthlyInterest: 0,\n    totalInterest: 0,\n    monthlyPayment: 0,\n    totalPayment: 0,\n    data: []\n  };\n\n  updateValues() {\n    const { amount, period, start } = this.state;\n    const monthlyInterest = (amount)*(Math.pow(0.01*(1.01), period))/(Math.pow(0.01, period - 1))\n    const totalInterest = monthlyInterest * (period + start);\n    const totalPayment = amount + totalInterest;\n    const monthlyPayment = period > start ? totalPayment/(period - start) : totalPayment/(period)\n\n    const data = Array.from({length: period + start}, (value, i) => {\n      const delayed = i < start;\n      return {\n        name: monthRange[i],\n        'Type': delayed ? 0 : Math.ceil(monthlyPayment).toFixed(0),\n        'OtherType': Math.ceil(monthlyInterest).toFixed(0)\n      }\n    })\n\n    this.setState({monthlyInterest, totalInterest, totalPayment, monthlyPayment, data})\n  }\n\n  componentDidMount() {\n    this.updateValues();\n  }\n\n  handleChangeAmount = (event, value) => {\n    this.setState({amount: value, loading: false});\n    this.updateValues();\n  }\n\n  handleChangePeriod = (event, value) => {\n    this.setState({period: value, loading: false});\n    this.updateValues();\n  }\n\n  handleChangeStart = (event, value) => {\n    this.setState({start: value, loading: false});\n    this.updateValues();\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { amount, period, start, monthlyPayment,\n      monthlyInterest, data, loading } = this.state;\n    const currentPath = this.props.location.pathname\n\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <Topbar currentPath={currentPath} />\n        <div className={classes.root}>\n          <Grid container justify=\"center\" >\n            <Grid spacing={24} alignItems=\"center\" justify=\"center\" container className={classes.grid}>\n              <Grid item xs={12}>\n                <div className={classes.topBar}>\n                  <div className={classes.block}>\n                    <Typography variant=\"h6\" gutterBottom>Dashboard</Typography>\n                    <Typography variant=\"body1\">\n                      Adjust and play with our sliders.\n                    </Typography>\n                  </div>\n                  <div>\n                    <Button variant=\"outlined\" className={classes.outlinedButtom}>\n                      Get help\n                    </Button>\n                  </div>\n                </div>\n              </Grid>\n              <Grid item xs={12} md={4}>\n                <Paper className={classes.paper}>\n                  <div>\n                    <Typography variant=\"subtitle1\" gutterBottom>\n                      How much you want to transfer\n                    </Typography>\n                    <Typography variant=\"body1\">\n                      Use slider to set the amount you need.\n                    </Typography>\n                    <div className={classes.blockCenter}>\n                      <Typography color='secondary' variant=\"h6\" gutterBottom>\n                        {numeral(amount).format()} USD\n                      </Typography>\n                    </div>\n                    <div>\n                      <Slider\n                        value={amount}\n                        min={20000}\n                        max={150000}\n                        step={15000}\n                        onChange={this.handleChangeAmount}\n                      />\n                    </div>\n                    <div className={classes.rangeLabel}>\n                      <div>\n                        <Typography variant=\"subtitle2\">\n                          15,000 USD\n                        </Typography>\n                      </div>\n                      <div>\n                        <Typography variant=\"subtitle2\">\n                          150,000 USD\n                        </Typography>\n                      </div>\n                    </div>\n                  </div>\n                </Paper>\n              </Grid>\n              <Grid item xs={12} md={4}>\n                <Paper className={classes.paper}>\n                  <div>\n                    <Typography variant=\"subtitle1\" gutterBottom>\n                      Period\n                    </Typography>\n                    <Typography variant=\"body1\">\n                      A sample period\n                    </Typography>\n                    <div className={classes.blockCenter}>\n                      <Typography color='secondary' variant=\"h6\" gutterBottom>\n                        {period} months\n                      </Typography>\n                    </div>\n                    <div>\n                      <Slider\n                        value={period}\n                        min={1}\n                        max={6}\n                        step={1}\n                        onChange={this.handleChangePeriod}\n                      />\n                    </div>\n                    <div className={classes.rangeLabel}>\n                      <div>\n                        <Typography variant=\"subtitle2\">\n                          1 month\n                        </Typography>\n                      </div>\n                      <div>\n                        <Typography variant=\"subtitle2\">\n                          6 months\n                        </Typography>\n                      </div>\n                    </div>\n                  </div>\n                </Paper>\n              </Grid>\n              <Grid item xs={12} md={4}>\n                <Paper className={classes.paper}>\n                  <div>\n                    <Typography variant=\"subtitle1\" gutterBottom>\n                      Start date\n                    </Typography>\n                    <Typography variant=\"body1\">\n                      Set your preferred start date.\n                    </Typography>\n                    <div className={classes.blockCenter}>\n                      <Typography color='secondary' variant=\"h6\" gutterBottom>\n                        {monthRange[start]}\n                      </Typography>\n                    </div>\n                    <div>\n                      <Slider\n                        value={start}\n                        min={0}\n                        max={5}\n                        step={1}\n                        onChange={this.handleChangeStart}\n                      />\n                    </div>\n                    <div className={classes.rangeLabel}>\n                      <div>\n                        <Typography variant=\"subtitle2\">\n                          Dec 2018\n                        </Typography>\n                      </div>\n                      <div>\n                        <Typography variant=\"subtitle2\">\n                          May 2019\n                        </Typography>\n                      </div>\n                    </div>\n                  </div>\n                </Paper>\n              </Grid>\n              <Grid container spacing={4} justify=\"center\">\n                <Grid item xs={12} md={8} >\n                  <Paper className={classes.paper} style={{position: 'relative'}}>\n                    <Loading loading={loading} />\n                    <div className={loading ? classes.loadingState : ''}>\n                      <Typography variant=\"subtitle1\" gutterBottom>\n                        Some details\n                      </Typography>\n                      <Typography variant=\"body1\">\n                        Details about the graph\n                      </Typography>\n                      <div style={{marginTop: 14, marginBottom: 14}}>\n                        <div className={classes.inlining}>\n                          <Avatar className={classes.loanAvatar}></Avatar>\n                          <Typography className={classes.inlining} variant=\"subtitle2\" gutterBottom>\n                            Type\n                          </Typography>\n                          <Typography className={classes.inlining} color='secondary' variant=\"h6\" gutterBottom>\n                            {numeral(monthlyPayment).format()} units\n                          </Typography>\n                        </div>\n                        <div className={classes.inlining}>\n                          <Avatar className={classes.interestAvatar}></Avatar>\n                          <Typography className={classes.inlining} variant=\"subtitle2\" gutterBottom>\n                            Othe type\n                          </Typography>\n                          <Typography className={classes.inlining} color=\"secondary\" variant=\"h6\" gutterBottom>\n                            {numeral(monthlyInterest).format()} units\n                          </Typography>\n                        </div>\n                      </div>\n                      <div >\n                        <SimpleLineChart data={data} />\n                      </div>\n                    </div>\n                  </Paper>\n              </Grid>\n              <Grid item xs={12} md={4}>\n                <Paper className={classes.paper} style={{position: 'relative'}}>\n                  <Loading loading={loading} />\n                  <div className={loading ? classes.loadingState : ''}>\n                    <Typography variant=\"subtitle1\" gutterBottom>\n                      State\n                    </Typography>\n                    <div className={classes.mainBadge}>\n                      <VerifiedUserIcon style={{fontSize: 72}} fontSize={'large'} color={'secondary'} />\n                      <Typography variant=\"h5\" color={'secondary'} gutterBottom>\n                        Verified\n                      </Typography>\n                    </div>\n                    <div className={classes.buttonBar}>\n                      <Button to={{ pathname: \"/dashboard\", search: `?type=save` }} component={Link} variant=\"outlined\" className={classes.actionButtom}>\n                        Save\n                      </Button>\n                      <Button to={{ pathname: \"/dashboard\", search: `?type=apply` }} component={Link} color='primary' variant=\"contained\" className={classes.actionButtom}>\n                        Apply\n                      </Button>\n                    </div>\n                  </div>\n                  </Paper>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </div>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default withRouter(withStyles(styles)(TheoreticalAnalysis));\n","export function checkPointInsideCircle(referenceNode, nodeToCompare, radius) {\n    const square_dist = Math.sqrt(Math.pow((referenceNode.x - nodeToCompare.x), 2) + Math.pow((referenceNode.y - nodeToCompare.y), 2));\n    return square_dist <= radius\n}\n\nexport function squareDistanceBetweenPoints(nodeA, nodeB){\n    // (xA − xB)2 + (yA − yB)2\n    return Math.pow((nodeA.x - nodeB.x),2) + Math.pow((nodeA.y - nodeB.y),2)\n}\n","import {squareDistanceBetweenPoints} from \"../utils/geometryUtils\";\n\nexport let timesClicked = 0;\n\nexport class Node {\n    constructor(x, y, id = 0, sensingRate = 80, isActive = true, isReference = false) {\n        this.x = x;\n        this.y = y;\n        this.sensingRate = sensingRate;\n        this.oneHopeNeighbors = [];\n        this.twoHopeNeighbors = [];\n        this.coverageHolesAroundNode = [];\n        this.active = isActive;\n        this.isReference = isReference;\n        this.id = id\n    }\n}\n\nexport class Point {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n}\n\nexport class Triangle {\n    rightAngle = 1.571 // 90 degrees equivalence\n    constructor(nodeA, nodeB, nodeC) {\n        this.pointA = nodeA;\n        this.pointB = nodeB;\n        this.pointC = nodeC;\n    }\n\n    getArea() {\n        return Math.abs(0.5 * (this.pointA.x * (this.pointB.y - this.pointC.y) + this.pointB.x * (this.pointC.y - this.pointA.y) + this.pointC.x * (this.pointA.y - this.pointB.y)))\n    }\n\n    getDistanceAB() {\n        return Math.hypot(this.pointB.x - this.pointA.x, this.pointB.y - this.pointA.y)\n    }\n\n    getDistanceAC() {\n        return Math.hypot(this.pointC.x - this.pointA.x, this.pointC.y - this.pointA.y)\n    }\n\n    getDistanceBC() {\n        return Math.hypot(this.pointC.x - this.pointB.x, this.pointC.y - this.pointB.y)\n    }\n\n    getCircumRadius() {\n        return (this.getDistanceAB() * this.getDistanceAC() * this.getDistanceBC()) / (4 * this.getArea())\n    }\n\n    getAngleA() {\n        return Math.asin(this.getDistanceAB() / (2 * this.getCircumRadius()))\n    }\n\n    getAngleC() {\n        return Math.asin(this.getDistanceAC() / (2 * this.getCircumRadius()))\n    }\n\n    getAngleB() {\n        return Math.asin(this.getDistanceBC() / (2 * this.getCircumRadius()))\n    }\n\n    getAngles(){\n        const a2 = squareDistanceBetweenPoints(this.pointB,this.pointC);\n        const b2 = squareDistanceBetweenPoints(this.pointA,this.pointC);\n        const c2 = squareDistanceBetweenPoints(this.pointA,this.pointB);\n\n        const a = Math.sqrt(a2);\n        const b = Math.sqrt(b2);\n        const c = Math.sqrt(c2);\n\n        const alpha = Math.acos((b2 + c2 - a2)/(2*b*c));\n        const betta = Math.acos((a2 + c2 - b2)/(2*a*c));\n        const gamma = Math.acos((a2 + b2 - c2)/(2*a*b));\n        return {alpha, betta, gamma}\n    }\n\n    isObtuse() {\n        const {alpha, betta, gamma} = this.getAngles();\n        const isA = alpha > this.rightAngle;\n        const isB = betta > this.rightAngle;\n        const isC = gamma > this.rightAngle;\n\n        return isA || isB || isC\n    }\n\n    isAcute() {\n        const {alpha, betta, gamma} = this.getAngles();\n        const isA = alpha < this.rightAngle;\n        const isB = betta < this.rightAngle;\n        const isC = gamma < this.rightAngle;\n        return isA && isB && isC\n    }\n\n    // Function to find the line given two points\n    lineFromNodes(nodeA, nodeB) {\n        const a = nodeB.y - nodeA.y;\n        const b = nodeA.x - nodeB.x;\n        const c = a * (nodeA.x) + b * (nodeA.y);\n        return {\n            a,\n            b,\n            c\n        }\n    }\n\n    // Function which converts the input line to its\n    // perpendicular bisector. It also inputs the points\n    // whose mid-point lies on the bisector\n    perpendicularBisectorFromLine(nodeA, nodeB, oa, ob, oc) {\n        const mid_point = new Point((nodeA.x + nodeB.x) / 2,\n            (nodeA.y + nodeB.y) / 2);\n        // c = -bx + ay\n        const c = -ob * (mid_point.x) + oa * (mid_point.y);\n        const temp = oa;\n        const a = -ob;\n        const b = temp;\n        return {\n            a,\n            b,\n            c\n        }\n    }\n\n    // Returns the intersection point of two lines\n    lineLineIntersection(a1, b1, c1, a2, b2, c2) {\n        const determinant = a1 * b2 - a2 * b1;\n        if (determinant === 0) {\n            // The lines are parallel. This is simplified\n            // by returning a pair of FLT_MAX\n            return new Point(Number.MAX_VALUE, Number.MAX_VALUE);\n        } else {\n            const x = (b2 * c1 - b1 * c2) / determinant;\n            const y = (a1 * c2 - a2 * c1) / determinant;\n            return new Point(x, y);\n        }\n    }\n\n    getCircumCenter(A = this.pointA, B = this.pointB, C = this.pointC) {\n        // Line AB is represented as ax + by = c\n        let resA = this.lineFromNodes(A, B);\n        let oa = resA.a;\n        let ob = resA.b;\n        let oc = resA.c;\n\n        // Line BC is represented as ex + fy = g\n        let resB = this.lineFromNodes(B, C);\n        let oe = resB.a;\n        let of = resB.b;\n        let og = resB.c;\n\n        // Converting lines PQ and QR to perpendicular\n        // vbisectors. After this, L = ax + by = c\n        // M = ex + fy = g\n        let {a, b, c} = this.perpendicularBisectorFromLine(A, B, oa, ob, oc);\n        let resC = this.perpendicularBisectorFromLine(B, C, oe, of, og);\n        let e = resC.a;\n        let f = resC.b;\n        let g = resC.c;\n\n        // The point of intersection of L and M gives\n        // the circumcenter\n        const circumcenter =\n            this.lineLineIntersection(a, b, c, e, f, g);\n\n        if (circumcenter.x === Number.MAX_VALUE &&\n            circumcenter.y === Number.MAX_VALUE) {\n            console.log(\"The two perpendicular bisectors found come parallel\");\n            console.log(\"Thus, the given points do not form a triangle and are collinear\");\n        } else {\n            console.log(\"The circumcenter of the triangle PQR is: \");\n            console.log(circumcenter.x, circumcenter.y);\n        }\n        return circumcenter\n    }\n}\n\nfunction checkClickInside(mouseX, mouseY, canvasWidth, canvasHeight) {\n    return mouseX > 0 && mouseX < canvasWidth && mouseY > 0 && mouseY < canvasHeight\n}\n\nexport default function sketch(p) {\n    let div1 = document.getElementById(\"paper\");\n    p.setup = function () {\n\n        console.log(\"div1 width\");\n        console.log(div1.offsetWidth - 90);\n        // p.createCanvas(div1.offsetWidth, div1.offsetHeight);\n        p.createCanvas(div1.offsetWidth - 60, 600);\n        p.fill('black');\n        // let canvas = p.createCanvas(canvasWidth, canvasHeight);\n        // canvas.parent('sketchH1');\n    };\n\n    p.myCustomRedrawAccordingToNewPropsHandler = function (props) {\n        console.log(\"myCustomRedrawAccordingToNewPropsHandler\");\n        console.log(props)\n        if (props.getCoords) {\n            p.sendCoords = props.getCoords;\n        }\n        if (props.nodes) {\n            p.nodes = props.nodes\n        }\n        if (props.addingNodes !== undefined) {\n            p.addingNodes = props.addingNodes\n        }\n        if(props.circumCenter){\n            p.circumCenter = props.circumCenter\n        }\n    };\n\n    p.draw = function () {\n        p.background(200);\n        if (p.nodes) {\n            p.nodes.forEach((node,i)=>{\n                if(node.active){\n                    p.ellipse(node.x, node.y, 6, 6);\n                    p.text('Node ' + (i) + '', node.x - 16, node.y + 15);\n                    p.stroke('black');\n                    p.fill('rgba(0,255,0, 0.25)');\n\n                    p.circle(node.x, node.y, node.sensingRate*2);\n                    if(node.isReference){\n                        p.fill('rgba(163, 255, 232, 0.25)');\n                        p.circle(node.x, node.y, 2*node.sensingRate*2)\n                    }\n                    if(node.coverageHolesAroundNode.length > 0){\n                        node.coverageHolesAroundNode.forEach((val,index)=>{\n                            p.ellipse(val.x, val.y, 6, 6);\n                            p.text('cc: '+index+'', val.x - 16, val.y + 15);\n                        })\n                    }\n                }\n                else{\n                    p.ellipse(node.x, node.y, 6, 6);\n                    p.text('Node ' + (i) + '', node.x - 16, node.y + 15);\n                    p.stroke('black');\n                    p.fill('rgba(255,0,0, 0.25)');\n                    p.circle(node.x, node.y, node.sensingRate*2);\n                }\n            });\n        }\n        if(p.circumCenter){\n            // p.ellipse(p.circumCenter.x, p.circumCenter.y, 6, 6);\n            // p.text('Circum center', p.circumCenter.x - 16, p.circumCenter.y + 15);\n        }\n    };\n\n    p.mousePressed = function () {\n        if (checkClickInside(p.mouseX, p.mouseY, div1.offsetWidth - 60, 600)) {\n            p.sendCoords(p.mouseX, p.mouseY);\n        }\n    };\n\n    p.windowResized = function () {\n        let div1 = document.getElementById(\"paper\");\n        p.resizeCanvas(div1.offsetWidth - 60, 600);\n    }\n};","import React, {Component} from 'react';\nimport withStyles from '@material-ui/styles/withStyles';\nimport Paper from '@material-ui/core/Paper';\nimport P5Wrapper from 'react-p5-wrapper';\nimport sketch, {Node} from '../../sketches/sketch';\nimport {connect} from \"react-redux\";\nimport {withRouter} from \"react-router-dom\";\nimport {bindActionCreators} from \"redux\";\nimport * as demoActions from \"../../actions/demo\";\n\nconst styles = theme => ({\n    paper: {\n        padding: theme.spacing(3),\n        textAlign: 'left',\n        color: theme.palette.text.secondary\n    },\n    avatar: {\n        margin: 10,\n        backgroundColor: theme.palette.grey['200'],\n        color: theme.palette.text.primary,\n    },\n    avatarContainer: {\n        [theme.breakpoints.down('sm')]: {\n            marginLeft: 0,\n            marginBottom: theme.spacing(4)\n        }\n    },\n    itemContainer: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-start',\n        [theme.breakpoints.down('sm')]: {\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'center'\n        }\n    },\n    baseline: {\n        alignSelf: 'baseline',\n        marginLeft: theme.spacing(4),\n        [theme.breakpoints.down('sm')]: {\n            display: 'flex',\n            flexDirection: 'column',\n            textAlign: 'center',\n            alignItems: 'center',\n            width: '100%',\n            marginTop: theme.spacing(2),\n            marginBottom: theme.spacing(2),\n            marginLeft: 0\n        }\n    },\n    inline: {\n        display: 'inline-block',\n        marginLeft: theme.spacing(4),\n        [theme.breakpoints.down('sm')]: {\n            marginLeft: 0\n        }\n    },\n    inlineRight: {\n        width: '30%',\n        textAlign: 'right',\n        marginLeft: 50,\n        alignSelf: 'flex-end',\n        [theme.breakpoints.down('sm')]: {\n            width: '100%',\n            margin: 0,\n            textAlign: 'center'\n        }\n    },\n    backButton: {\n        marginRight: theme.spacing(2)\n    }\n});\nexport let pointsSegment1 = [];\n\n\nclass SimulatorContainer extends Component {\n    getCoords = (x, y) => {\n        if (this.props.addingNodes) {\n            this.props.addNodeCreator(new Node(x, y, this.props.nodes.length))\n        }\n    };\n\n    componentDidMount() {\n    }\n\n    render() {\n        const {classes} = this.props;\n\n        return (\n            <div className={classes.root}>\n                <Paper className={classes.paper} id={'paper'}>\n                    <P5Wrapper sketch={sketch} getCoords={this.getCoords} nodes={this.props.nodes}\n                               addingNodes={this.props.addingNodes} circumCenter={this.props.circumCenter} />\n                </Paper>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        nodes: state.demo.nodes,\n        sensingRate: state.demo.sensingRate,\n        addingNodes: state.demo.addingNodes,\n        circumCenter: state.demo.circumCenter\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({...demoActions}, dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(withStyles(styles)(SimulatorContainer)))\n","export function joinArrays(array1, array2) {\n    return [...new Set([...array1, ...array2])]\n}","import React, {Component} from 'react';\nimport withStyles from '@material-ui/styles/withStyles';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\nimport HelpIcon from '@material-ui/icons/Help';\nimport SettingsInputAntennaIcon from '@material-ui/icons/SettingsInputAntenna';\nimport AddIcon from '@material-ui/icons/Add';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport StopIcon from '@material-ui/icons/Stop';\nimport {Node, timesClicked, Triangle} from '../../sketches/sketch';\nimport {connect} from \"react-redux\";\nimport {withRouter} from \"react-router-dom\";\nimport {bindActionCreators} from \"redux\";\nimport * as demoActions from \"../../actions/demo\";\nimport green from '@material-ui/core/colors/green';\nimport createMuiTheme from \"@material-ui/core/styles/createMuiTheme\";\nimport {ThemeProvider as MuiThemeProvider} from '@material-ui/core/styles';\nimport {red} from \"@material-ui/core/colors\";\nimport SignalWifiOffIcon from '@material-ui/icons/SignalWifiOff';\nimport SwipeDialog from \"../dialogs/SwipeDialog\";\nimport {checkPointInsideCircle} from \"../../utils/geometryUtils\";\nimport {joinArrays} from \"../../utils/generalUtils\";\n\n\nconst styles = theme => ({\n    paper: {\n        padding: theme.spacing(3),\n        textAlign: 'left',\n        color: theme.palette.text.secondary\n    },\n    outlinedButtom: {\n        textTransform: 'uppercase',\n        margin: theme.spacing(1)\n    },\n    avatar: {\n        margin: 10,\n        backgroundColor: theme.palette.grey['200'],\n        color: theme.palette.text.primary,\n    },\n    avatarContainer: {\n        [theme.breakpoints.down('sm')]: {\n            marginLeft: 0,\n            marginBottom: theme.spacing(4)\n        }\n    },\n    itemContainer: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-start',\n        [theme.breakpoints.down('sm')]: {\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'center'\n        }\n    },\n    baseline: {\n        alignSelf: 'baseline',\n        marginLeft: theme.spacing(4),\n        [theme.breakpoints.down('sm')]: {\n            display: 'flex',\n            flexDirection: 'column',\n            textAlign: 'center',\n            alignItems: 'center',\n            width: '100%',\n            marginTop: theme.spacing(2),\n            marginBottom: theme.spacing(2),\n            marginLeft: 0\n        }\n    },\n    inline: {\n        display: 'inline-block',\n        marginLeft: theme.spacing(4),\n        [theme.breakpoints.down('sm')]: {\n            marginLeft: 0\n        }\n    },\n    inlineRight: {\n        width: '30%',\n        textAlign: 'right',\n        marginLeft: 50,\n        alignSelf: 'flex-end',\n        [theme.breakpoints.down('sm')]: {\n            width: '100%',\n            margin: 0,\n            textAlign: 'center'\n        }\n    },\n    backButton: {\n        marginRight: theme.spacing(2)\n    }\n})\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: green,\n        secondary: red\n    },\n});\n\n\nclass SideBar extends Component {\n\n    state = {\n        learnMoredialog: false\n    };\n\n    openDialog = (event) => {\n        this.setState({learnMoredialog: true});\n    };\n    dialogClose = (event) => {\n        this.setState({learnMoredialog: false});\n    };\n\n    dialogCloseOk = (referenceNodes) => {\n        this.setState({learnMoredialog: false});\n        this.getNeighbors()\n    };\n\n    handleAddNodes = () => {\n        // this.props.addingNodesCreator();\n        this.props.addNodeCreator(new Node(469.4566699123661, 244.0703125, 0, 80, true, true));\n        this.props.addNodeCreator(new Node(413.4021421616358, 224.0703125, 1,80,false));\n        this.props.addNodeCreator(new Node(374.36416747809153, 138.0703125, 2));\n        this.props.addNodeCreator(new Node(577.5618305744888, 196.0703125, 3));\n        this.props.addNodeCreator(new Node(588.572541382668, 305.0703125, 4));\n        this.props.addNodeCreator(new Node(484.47127555988317, 361.0703125, 5));\n        this.props.addNodeCreator(new Node(346.3369036027264, 327.0703125, 6));\n        this.props.addNodeCreator(new Node(316.3076923076923, 261.0703125, 7));\n    };\n\n    getNodeNeighbors = (referenceNode, nodes) => {\n        const {oneHopeNeighbors, twoHopeNeighbors} = this.nodesThatListenedMessageWithRespectToRadius(referenceNode, nodes, true, \"message\");\n    }\n\n    getNeighbors = () => {\n        this.props.neighborDiscoveryPhaseCreator();\n        console.log(\"Well, are you ready to rumble?, don't forget single responsibility\");\n        const nodes = this.props.nodes.filter((val)=>val.active);\n        const referenceNodes = nodes.filter((val) => val.isReference).map((valM) => valM.id);\n        console.log(\"In this part we will iterate over the reference nodes to init the process of get Neighbor phase, for performance purposes we will do it for only one reference node\");\n        console.log(\"There are two ways of finding one and two hope neighbors\");\n        console.log();\n        referenceNodes.forEach((referenceNode) => {\n            console.log(\"We iterate for every node that is not the reference node and we send a message\");\n            console.log(\"Nodes that listened to my message :)\");\n            const message = \"HELLO!!\";\n            const {oneHopeNeighbors, twoHopeNeighbors} = this.nodesThatListenedMessageWithRespectToRadius(referenceNode, nodes, true, message);\n            console.log(\"Just for testing purposes, let's see the union\");\n            const union = joinArrays(oneHopeNeighbors, twoHopeNeighbors);\n            console.log(union);\n            this.props.addNodeOneHopeNeighborCreator(referenceNode, oneHopeNeighbors);\n            this.props.addNodeTwoHopeNeighborCreator(referenceNode, twoHopeNeighbors)\n        });\n        this.props.neighborDiscoveryPhaseCreator();\n    };\n\n    findHoleBetweenReferenceNodeAndPairNeighbors = (referenceNode, Ai, Aj) => {\n\n        const triangle = new Triangle(referenceNode, Ai, Aj);\n        const {nodes} = this.props;\n        console.log(\"--------------------------------------------\");\n        console.log(\"Triangle between reference node and points:\");\n        console.log(referenceNode.id);\n        console.log(Ai.id);\n        console.log(Aj.id);\n        console.log(\"--------------------------------------------\");\n        // Step 8: Compute circum radius R and circum center Z of triangle XAiAj;\n        const R = triangle.getCircumRadius();\n        const Z = triangle.getCircumCenter();\n        this.props.drawCircumCenterCreator(Z);\n        this.props.addCoverageHole(referenceNode.id, Z);\n        // Step 9: Verify if XAiAj is an acute or obtuse triangle;\n        const isObtuse = triangle.isObtuse();\n        const isAcute = triangle.isAcute();\n\n        // Step 10: If (X forms an acute triangle with its neighbors Ai and Aj)\n        if (isAcute) {\n            if (R < referenceNode.sensingRate) {\n                console.log(\"%cNo hole exists around the reference node \"+referenceNode.id+\"\", \"color: green; font-size:15px;\")\n            } else {\n                console.log(\"%cThere exists a hole around the reference node \"+referenceNode.id+\"\", \"color: red; font-size:15px;\");\n                this.props.addCoverageHole(referenceNode.id, Z);\n            }\n        }\n        if (isObtuse) {\n            if (R < referenceNode.sensingRate) {\n                console.log(\"%cNo hole exists around the reference node \"+referenceNode.id+\"\", \"color: green; font-size:15px;\")\n            } else {\n                // Check if circum center Z is covered by any other sensor\n                let noHoleDetected = this.nodesThatCoverCircumCenter(Z, nodes).length > 0;\n                if (noHoleDetected) {\n                    console.log(\"No hole exists around the reference node \"+referenceNode.id+\"\", \"color: green; font-size:15px;\")\n                } else {\n                    console.log(\"%cThere exists a hole around the reference node \"+referenceNode.id+\"\", \"color: red; font-size:15px;\");\n                    this.props.addCoverageHole(referenceNode.id, Z);\n                }\n            }\n        }\n\n    };\n\n    coverageHoleDetection = () => {\n        let i = 0;\n        this.props.coverageHoleDetectionPhaseCreator();\n        const nodes = this.props.nodes.filter((node)=>node.active);\n        // Step 1: Select any node X randomly as a reference node;\n        const referenceNodes = nodes.filter((val) => val.isReference).map((valM) => valM.id);\n        const X = referenceNodes[0];\n        // Step 2: Find one and two-hop neighbors of X;\n        const {oneHopeNeighbors, twoHopeNeighbors} = this.nodesThatListenedMessageWithRespectToRadius(X, nodes, true, \"Hello\");\n        // Assign those nodes to set N\n        const N = joinArrays(oneHopeNeighbors, twoHopeNeighbors);\n        const nodeX = nodes[X];\n\n        // Step 3: Select nodes from set N whose y-coordinate >= b; Assign those nodes to set Nu\n        const N_u = N.map((val) => nodes[val]).filter((val) => val.y <= nodeX.y);\n\n        // Step 4: Arrange nodes of Nu with their x-coordinate in ascending order and put them in a new set Nux,\n        const N_uX = N_u.sort(function (a, b) {\n            return a.x - b.x\n        });\n        const firstN_uX = N_uX.length > 0 ? N_uX[0] : 0;\n\n        // Step 5: Select nodes from set N whose y-coordinate < b; Assign those nodes to set Nd;\n        const N_d = N.map((val) => nodes[val]).filter((val) => val.y > nodeX.y);\n\n        // Step 6: Arrange nodes of Nd with their x-coordinate in descending order and put them in a new set Ndx\n        const N_dX = N_d.sort(function (a, b) {\n            return b.x - a.x\n        });\n\n        // Step 7: Select 1st two nodes Ai and Aj from Nux such that x-coordinate of Ai < Aj\n        let isFirstTime = true;\n        if (N_uX.length > 0) {\n            do {\n                console.log(\"Entro!!\");\n                let Ai = N_uX[0];\n                let Aj = N_uX[1];\n                this.findHoleBetweenReferenceNodeAndPairNeighbors(nodeX, Ai, Aj);\n                // Step 13: Update Nux’Nux􏰁fAig\n                N_uX.shift();\n                const whileCond = N_uX.length !== 1;\n                i++;\n            } while (N_uX.length !== 1);\n        }\n\n        // Step 14: Choose the 1st node Ai of Ndx and last balance node Aj of Nux;\n        if (N_dX.length > 0) {\n            do {\n                let Ai = 0;\n                let Aj = 0;\n                if (isFirstTime) {\n                    Ai = N_dX[0];\n                    Aj = N_uX[0];\n                } else {\n                    Ai = N_dX[0];\n                    Aj = N_dX[1];\n                }\n                this.findHoleBetweenReferenceNodeAndPairNeighbors(nodeX, Ai, Aj);\n                if (isFirstTime) {\n                    isFirstTime = false\n                } else {\n                    N_dX.shift()\n                }\n\n\n            } while (N_dX.length !== 1);\n        }\n        this.findHoleBetweenReferenceNodeAndPairNeighbors(nodeX, N_dX[0], firstN_uX);\n\n        this.props.coverageHoleDetectionPhaseCreator();\n    };\n\n    nodesThatListenedMessageWithRespectToRadius = (referenceNode, nodes, oneHop, message) => {\n        let response = {\n            oneHopeNeighbors: [],\n            twoHopeNeighbors: []\n        };\n        nodes.forEach((node, index) => {\n            if (referenceNode !== index) {\n                if (checkPointInsideCircle(nodes[referenceNode], node, node.sensingRate)) {\n                    response.oneHopeNeighbors.push(index)\n                }\n                if (checkPointInsideCircle(nodes[referenceNode], node, 2 * node.sensingRate)) {\n                    response.twoHopeNeighbors.push(index)\n                }\n            }\n        });\n        return response\n    };\n\n    nodesThatCoverCircumCenter = (circumCenter, nodes) => {\n        let response = []\n        nodes.forEach((node) => {\n            if (checkPointInsideCircle(node, circumCenter, node.sensingRate)) {\n                response.push(node)\n            }\n        })\n        return response\n    };\n\n    componentDidMount() {\n        console.log(\"Props Card Item\");\n        console.log(this.props)\n    }\n\n    render() {\n        const {classes, neighborDiscoveryPhase, addingNodes} = this.props;\n        console.log(\"NEIGHBOR DISCOVERY PHASE\");\n        console.log(neighborDiscoveryPhase);\n\n        return (\n            <div className={classes.root}>\n                <Paper className={classes.paper}>\n                    <div className={classes.itemContainer}>\n                        <div className={classes.baseline}>\n                            <div className={classes.inline}>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"secondary\"\n                                    disabled={neighborDiscoveryPhase}\n                                    onClick={this.handleAddNodes}\n                                    className={classes.outlinedButtom}\n                                    startIcon={!addingNodes ? <AddIcon/> : <StopIcon/>}\n                                >\n                                    Create Nodes\n                                </Button>\n                            </div>\n                            <div className={classes.inline}>\n                                <MuiThemeProvider theme={theme}>\n                                    <Button\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        disabled={addingNodes || neighborDiscoveryPhase}\n                                        className={classes.outlinedButtom}\n                                        startIcon={<PlayArrowIcon/>}\n                                    >\n                                        Start simulation\n                                    </Button>\n                                </MuiThemeProvider>\n\n                            </div>\n                            <div className={classes.inline}>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"secondary\"\n                                    onClick={this.coverageHoleDetection}\n                                    disabled={addingNodes || neighborDiscoveryPhase}\n                                    className={classes.outlinedButtom}\n                                    startIcon={<SettingsInputAntennaIcon/>}\n                                >\n                                    Find Coverage Holes\n                                </Button>\n                            </div>\n                            <div className={classes.inline}>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"default\"\n                                    onClick={this.openDialog}\n                                    disabled={addingNodes}\n                                    className={classes.outlinedButtom}\n                                    startIcon={<PersonAddIcon/>}\n                                >\n                                    Neighbor Discovery\n                                </Button>\n                            </div>\n                            <div className={classes.inline}>\n                                <MuiThemeProvider theme={theme}>\n                                    <Button\n                                        variant=\"contained\"\n                                        color=\"secondary\"\n                                        disabled={addingNodes || neighborDiscoveryPhase}\n                                        className={classes.outlinedButtom}\n                                        startIcon={<SignalWifiOffIcon/>}\n                                    >\n                                        Node error\n                                    </Button>\n                                </MuiThemeProvider>\n                            </div>\n                            <div className={classes.inline}>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"default\"\n                                    className={classes.outlinedButtom}\n                                    startIcon={<HelpIcon/>}\n                                >\n                                </Button>\n                            </div>\n                        </div>\n                    </div>\n                </Paper>\n                <SwipeDialog\n                    open={this.state.learnMoredialog}\n                    onClose={this.dialogClose}\n                    onOk={this.dialogCloseOk}\n                    nodes={this.props.nodes}/>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        nodes: state.demo.nodes,\n        sensingRate: state.demo.sensingRate,\n        addingNodes: state.demo.addingNodes,\n        neighborDiscoveryPhase: state.demo.neighborDiscoveryPhase\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({...demoActions}, dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(withStyles(styles)(SideBar)))\n","import React, { Component } from 'react';\nimport withStyles from '@material-ui/styles/withStyles';\nimport Typography from '@material-ui/core/Typography';\nimport { withRouter } from 'react-router-dom';\n\nconst styles = theme => ({\n  sectionContainer: {\n    marginBottom: theme.spacing(2),\n      marginLeft: 10\n  },\n  title: {\n    fontWeight: 'bold'\n  }\n});\n\nclass SectionHeader extends Component {\n  render() {\n    const { classes, title, subtitle} = this.props;\n    return (\n      <div className={classes.sectionContainer}>\n        <Typography variant=\"subtitle1\" className={classes.title}>\n          {title}\n        </Typography>\n        <Typography variant=\"body1\" gutterBottom>\n          {subtitle}\n        </Typography>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(withStyles(styles)(SectionHeader));\n","import React, {Component} from 'react';\nimport withStyles from '@material-ui/styles/withStyles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport SimulatorContainer from './simulator/SimulatorContainer';\nimport SideBar from './simulator/SideBar';\nimport Topbar from './Topbar';\nimport SectionHeader from './typo/SectionHeader';\n\nconst backgroundShape = require('../images/shape.svg');\n\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.grey['A500'],\n        overflow: 'hidden',\n        background: `url(${backgroundShape}) no-repeat`,\n        backgroundSize: 'cover',\n        backgroundPosition: '0 400px',\n        marginTop: 20,\n        padding: 20,\n        paddingBottom: 200\n    },\n    grid: {},\n    gridSide: {\n        marginLeft: 10,\n        marginBottom: theme.spacing(4),\n        width: 500\n    }\n})\n\nclass Demo extends Component {\n\n    render() {\n        const {classes} = this.props;\n        const currentPath = this.props.location.pathname\n\n        return (\n            <React.Fragment>\n                <CssBaseline/>\n                <Topbar currentPath={currentPath}/>\n                <div className={classes.root}>\n                    <Grid container direction=\"row\" justify=\"center\" spacing={2}>\n                        <Grid spacing={24} alignItems=\"center\" justify=\"center\" container className={classes.grid}>\n                            <Grid item xs={12} id={'gridNetworks'}>\n                                <SectionHeader title=\"Simulator\" subtitle=\"Coverage holes detection\"/>\n                                <SideBar/>\n                            </Grid>\n                            <Grid item xs={12} id={'gridNetworks'}>\n                                {/*<SectionHeader/>*/}\n                                <SimulatorContainer/>\n                            </Grid>\n                            {/*<Grid item xs={6} >*/}\n                            {/*  <SectionHeader title=\"Simulator\" subtitle=\"Coverage holes detection\" style={{marginLeft: 10}} />*/}\n                            {/*  <SideBar/>*/}\n                            {/*</Grid>*/}\n                        </Grid>\n                    </Grid>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default withStyles(styles)(Demo);","import React from 'react'\nimport {Route, HashRouter, Switch} from 'react-router-dom'\nimport Main from './containers/Main'\nimport {Provider} from 'react-redux'\nimport ScrollToTop from './components/ScrollTop'\nimport TheoreticalAnalysis from \"./containers/TheoreticalAnalysis\";\nimport Demo from \"./containers/Demo\";\n\nexport default ({store}) => (\n    <Provider store={store}>\n        <HashRouter>\n            <ScrollToTop>\n                <Switch>\n                    <Route exact path='/' component={Main}/>\n                    <Route exact path='/tanalysis' component={TheoreticalAnalysis}/>\n                    <Route exact path='/definitions' component={TheoreticalAnalysis}/>\n                    <Route exact path='/demo' component={Demo}/>\n                </Switch>\n            </ScrollToTop>\n        </HashRouter>\n    </Provider>\n)","import {\n    ADD_NODE,\n    ADD_NODE_ONE_HOPE_NEIGHBORS,\n    ADD_NODE_TWO_HOPE_NEIGHBORS,\n    ADD_SENSING_RATE,\n    ADD_COVERAGE_HOLE,\n    ADDING_NODES,\n    NEIGHBOR_DISCOVERY_PHASE,\n    COVERAGE_HOLE_DETECTION_PHASE,\n    GET_NODES,\n    GET_SENSING_RATE,\n    SET_REFERENCE,\n    SET_REFERENCE_NODES,\n    DRAW_CIRCUM_CENTER\n} from \"../actions/demo\";\nimport {Point} from \"../sketches/sketch\";\n\nexport const demo = (state = {\n    nodes: [],\n    sensingRate: 4,\n    addingNodes: false,\n    neighborDiscoveryPhase: false,\n    coverageHoleDetectionPhase: false,\n    coverageHoles: [],\n    referenceNodes: [],\n    circumCenter: new Point(0, 0)\n}, action) => {\n    const {node, sensingRate, referenceNodes, neighbors, referenceNode, circumCenter, hole} = action;\n\n    switch (action.type) {\n        case GET_NODES:\n            return {\n                ...state\n            };\n        case GET_SENSING_RATE:\n            return {\n                ...state\n            };\n        case ADDING_NODES:\n            return {\n                ...state,\n                addingNodes: !state.addingNodes\n            };\n        case NEIGHBOR_DISCOVERY_PHASE:\n            return {\n                ...state,\n                neighborDiscoveryPhase: !state.neighborDiscoveryPhase\n            };\n        case COVERAGE_HOLE_DETECTION_PHASE:\n            return {\n                ...state,\n                coverageHoleDetectionPhase: !state.coverageHoleDetectionPhase\n            };\n        case ADD_NODE:\n            let copy = {\n                ...state,\n                ['nodes']: [...state.nodes]\n            };\n            copy.nodes.push(node);\n            return copy;\n        case ADD_COVERAGE_HOLE:\n            let prevStateHole = {\n                ...state,\n            };\n            prevStateHole.nodes[referenceNode].coverageHolesAroundNode.push(hole);\n            return prevStateHole;\n        case SET_REFERENCE_NODES:\n            return {\n                ...state,\n                ['referenceNodes']: referenceNodes\n            };\n        case DRAW_CIRCUM_CENTER:\n            return {\n                ...state,\n                circumCenter\n            };\n        case ADD_NODE_ONE_HOPE_NEIGHBORS:\n            let prevStateOneHop = {\n                ...state,\n            };\n            prevStateOneHop.nodes[referenceNode].oneHopeNeighbors = neighbors;\n            return prevStateOneHop;\n        case ADD_NODE_TWO_HOPE_NEIGHBORS:\n            let prevStateTwoHop = {\n                ...state,\n            };\n            prevStateTwoHop.nodes[referenceNode].twoHopeNeighbors = neighbors;\n            return prevStateTwoHop;\n        case SET_REFERENCE:\n            let prevStateSetReference = {\n                ...state,\n            };\n            prevStateSetReference.nodes[referenceNode].isReference = !prevStateSetReference.nodes[referenceNode].isReference;\n            return prevStateSetReference;\n        case ADD_SENSING_RATE:\n            return {\n                ...state,\n                sensingRate: sensingRate\n            };\n        default:\n            return state\n    }\n};","import {combineReducers} from 'redux'\nimport {theoretical} from \"./theoretical\";\nimport {demo} from \"./demo\";\n\nconst rootReducer = combineReducers({\n    theorems: theoretical,\n    demo : demo\n});\nexport default rootReducer;","import {GET_THEORETICAL_THEOREMS} from '../actions/theoretical'\n\nexport function theoretical(state = [], action) {\n    const {theorems} = action;\n    switch (action.type) {\n        case GET_THEORETICAL_THEOREMS:\n            return {...state, theorems};\n        default:\n            return state;\n    }\n}","import { createStore, applyMiddleware,compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport { logger } from 'redux-logger'\nimport rootReducer from '../reducers'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst configureStore = preloadedState => createStore(\n    rootReducer,\n    preloadedState,\n    composeEnhancers(\n        applyMiddleware(thunk,logger)\n    )\n);\n\nexport default configureStore\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {connect, Provider} from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport * as theoremsActions from './actions/theoretical';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { createMuiTheme } from '@material-ui/core/styles'\nimport { blue, indigo } from '@material-ui/core/colors'\nimport Routes from './routes'\nimport {Route} from \"react-router-dom\";\nimport configureStore from \"./store/configureStore\";\nconst theme = createMuiTheme({\n  palette: {\n    secondary: {\n      main: blue[900]\n    },\n    primary: {\n      main: indigo[700]\n    }\n  },\n  typography: {\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\n      '\"Lato\"',\n      'sans-serif'\n    ].join(',')\n  }\n});\nconst store = configureStore();\nclass App extends Component {\n  render() {\n    return (\n        <div>\n          <ThemeProvider theme={theme}>\n            <Routes store={store} />\n          </ThemeProvider>\n        </div>\n    );\n  }\n}\n\n// class App extends Component {\n//   render() {\n//     return (\n//         <div>\n//           <ThemeProvider theme={theme}>\n//             <Routes />\n//           </ThemeProvider>\n//         </div>\n//     );\n//   }\n// }\n\n// const App = ({ store }) => (\n//     <Provider store={store}>\n//       <ThemeProvider theme={theme}>\n//         <Routes />\n//       </ThemeProvider>\n//     </Provider>\n// );\n\nfunction mapStateToProps(state){\n  return {\n    theorems: state.theorems.theorems\n  }\n}\nfunction mapDispatchToProps (dispatch) {\n  return bindActionCreators({...theoremsActions}, dispatch)\n}\n\nexport default App;\n\n// export default connect(mapStateToProps,mapDispatchToProps)(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport Root from './containers/Root'\nimport * as serviceWorker from './serviceWorker';\nimport configureStore from './store/configureStore'\nimport App from './App';\nconst store = configureStore();\n\n// ReactDOM.render(\n//     <Router>\n//         <Root store={store} />\n//     </Router>, document.getElementById('root'));\n//\n// ReactDOM.render(\n//         <App store={store} />);\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}